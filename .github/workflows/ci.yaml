name: CI

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read
  id-token: write

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: ESLint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        uses: sibiraj-s/action-eslint@v3
        with:
          eslint-args: '--ignore-path .gitignore --quiet'
          extensions: 'js,jsx,ts,tsx'
          annotations: true

  release:
    name: Publish via Semantic Release and Docker Publish
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true

      - name: Install dependencies
        run: npm ci

      - name: Semantic Release
        id: semantic
        uses: codfish/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ship-it-k8s:v${{ steps.semantic.outputs.release-version }}
            ghcr.io/${{ github.repository_owner }}/ship-it-k8s:latest
          platforms: |
            linux/amd64
            linux/arm64
